# CrowdGuard Pro - Docker Compose Configuration
version: '3.8'

services:
  # Main application
  crowdguard-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crowdguard-app
    ports:
      - "8501:8501"
    environment:
      - APP_ENVIRONMENT=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/crowd_monitoring
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./models:/app/models
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - crowdguard-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: crowdguard-db
    environment:
      POSTGRES_DB: crowd_monitoring
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - crowdguard-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: crowdguard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - crowdguard-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: crowdguard-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - crowdguard-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: crowdguard-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - crowdguard-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: crowdguard-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - crowdguard-app
    restart: unless-stopped
    networks:
      - crowdguard-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  crowdguard-network:
    driver: bridge
